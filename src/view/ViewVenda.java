/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import util.Loading;
import controller.ControllerCliente;
import controller.ControllerProdutoVendaProdutos;
import controller.ControllerVenda;
import controller.ControllerVendaProduto;
import controller.ControllerVendasCliente;
import controller.ProdutoController;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model.ModelCliente;
import model.ModelProduto;
import model.ModelProdutoVendaProdutos;
import model.ModelVenda;
import model.ModelVendaProduto;
import model.ModelVendasCliente;
import util.BLDatas;

/**
 *
 * @author Vitor
 */
public class ViewVenda extends javax.swing.JFrame {

    String salvarAlterar;
    ControllerCliente controllerCliente = new ControllerCliente();
    ModelCliente modelCliente = new ModelCliente();
    ArrayList<ModelCliente> listaModelCliente = new ArrayList<>();

    ProdutoController controllerProduto = new ProdutoController();
    ModelProduto modelProduto = new ModelProduto();
    ArrayList<ModelProduto> listaModelProduto = new ArrayList<>();

    ArrayList<ModelVendasCliente> listaModelVendasCliente = new ArrayList<>();
    ControllerVendasCliente controllerVendasCliente = new ControllerVendasCliente();

    ControllerVenda controllerVenda = new ControllerVenda();
    ModelVenda modelVenda = new ModelVenda();

    ControllerVendaProduto controllerVendaProduto = new ControllerVendaProduto();
    ModelVendaProduto modelVendaProduto = new ModelVendaProduto();
    ArrayList<ModelVendaProduto> listaModelVendaProduto = new ArrayList<>();

    ControllerProdutoVendaProdutos controllerProdutoVendaProdutos = new ControllerProdutoVendaProdutos();
    ModelProdutoVendaProdutos modelProdutoVendaProdutos = new ModelProdutoVendaProdutos();
    ArrayList<ModelProdutoVendaProdutos> listaModelProdutoVendaProdutos = new ArrayList<>();

    BLDatas data = new BLDatas();

    /**
     * Creates new form ViewVenda
     */
    public ViewVenda() {
        initComponents();
        setLocationRelativeTo(null);
        this.listarClientes();
        this.listarProdutos();
        this.carregarVendas();
        this.preencherCodClienteComboBox();
        this.preencherCodProdComboBox();
        this.somaValorTotalConsulta();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanelVenda = new javax.swing.JTabbedPane();
        jPanelCadastro = new javax.swing.JPanel();
        txtCodClienteVenda = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNumVenda = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCodProdutoVenda = new javax.swing.JTextField();
        txtQtdProd = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnAddProd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbVendaProduto = new javax.swing.JTable();
        btnNovo = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        txtDescontoVenda = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtDelProd = new javax.swing.JButton();
        cbNomeProduto = new componentes.UJComboBox();
        cbNomeCliente = new componentes.UJComboBox();
        txtTotalVenda = new javax.swing.JFormattedTextField();
        jPanelConsulta = new javax.swing.JPanel();
        txtSearchVenda = new javax.swing.JTextField();
        btnSearchVenda = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbVenda = new javax.swing.JTable();
        btnExcluirVenda = new javax.swing.JButton();
        btnEditarVenda = new javax.swing.JButton();
        vendaPDF = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtTotalConsulta = new javax.swing.JTextField();
        btnPedidosVenda = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("VPSoft - Venda");
        setResizable(false);

        txtCodClienteVenda.setEnabled(false);
        txtCodClienteVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodClienteVendaFocusLost(evt);
            }
        });

        jLabel1.setText("Cod. Cliente:");

        jLabel2.setText("Cliente:");

        txtNumVenda.setEnabled(false);

        jLabel3.setText("Nº venda:");

        jLabel4.setText("Cod. Produto:");

        txtCodProdutoVenda.setEnabled(false);
        txtCodProdutoVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodProdutoVendaFocusLost(evt);
            }
        });

        txtQtdProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtdProdActionPerformed(evt);
            }
        });

        jLabel5.setText("Nº quantidade:");

        btnAddProd.setText("Adicionar");
        btnAddProd.setEnabled(false);
        btnAddProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProdActionPerformed(evt);
            }
        });

        tbVendaProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Produto", "Qtd.", "Valor Unit.", "Subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbVendaProduto);
        if (tbVendaProduto.getColumnModel().getColumnCount() > 0) {
            tbVendaProduto.getColumnModel().getColumn(0).setMinWidth(70);
            tbVendaProduto.getColumnModel().getColumn(0).setPreferredWidth(70);
            tbVendaProduto.getColumnModel().getColumn(0).setMaxWidth(70);
            tbVendaProduto.getColumnModel().getColumn(1).setMinWidth(200);
            tbVendaProduto.getColumnModel().getColumn(1).setPreferredWidth(200);
            tbVendaProduto.getColumnModel().getColumn(1).setMaxWidth(200);
            tbVendaProduto.getColumnModel().getColumn(2).setMinWidth(70);
            tbVendaProduto.getColumnModel().getColumn(2).setPreferredWidth(70);
            tbVendaProduto.getColumnModel().getColumn(2).setMaxWidth(70);
            tbVendaProduto.getColumnModel().getColumn(3).setMinWidth(90);
            tbVendaProduto.getColumnModel().getColumn(3).setPreferredWidth(90);
            tbVendaProduto.getColumnModel().getColumn(3).setMaxWidth(90);
        }

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/new.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/save.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.setEnabled(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        txtDescontoVenda.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtDescontoVenda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDescontoVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescontoVendaFocusLost(evt);
            }
        });
        txtDescontoVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescontoVendaActionPerformed(evt);
            }
        });

        jLabel6.setText("TOTAL:");

        jLabel7.setText("Desconto:");

        jLabel9.setText("Produto:");

        txtDelProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/trash20.png"))); // NOI18N
        txtDelProd.setText("Deletar");
        txtDelProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDelProdActionPerformed(evt);
            }
        });

        cbNomeProduto.setAutocompletar(true);
        cbNomeProduto.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbNomeProdutoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        cbNomeCliente.setAutocompletar(true);
        cbNomeCliente.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbNomeClientePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        txtTotalVenda.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        txtTotalVenda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTotalVenda.setEnabled(false);
        txtTotalVenda.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanelCadastroLayout = new javax.swing.GroupLayout(jPanelCadastro);
        jPanelCadastro.setLayout(jPanelCadastroLayout);
        jPanelCadastroLayout.setHorizontalGroup(
            jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
                    .addGroup(jPanelCadastroLayout.createSequentialGroup()
                        .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCodClienteVenda, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(txtCodProdutoVenda))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(jLabel9)
                            .addComponent(cbNomeProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                            .addComponent(cbNomeCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAddProd, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jLabel3)
                            .addComponent(txtQtdProd)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNumVenda))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelCadastroLayout.createSequentialGroup()
                        .addComponent(btnNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDelProd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalvar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCadastroLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDescontoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelCadastroLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(77, 77, 77))
                            .addComponent(txtTotalVenda))))
                .addContainerGap())
        );
        jPanelCadastroLayout.setVerticalGroup(
            jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodClienteVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodProdutoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQtdProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddProd)
                .addGap(13, 13, 13)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDescontoVenda, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(txtTotalVenda))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovo)
                    .addComponent(btnSalvar)
                    .addComponent(txtDelProd))
                .addContainerGap())
        );

        jPanelVenda.addTab("Cadastro", jPanelCadastro);

        btnSearchVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/searcher.png"))); // NOI18N
        btnSearchVenda.setText("Pesquiar");
        btnSearchVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchVendaActionPerformed(evt);
            }
        });

        tbVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Cliente", "Subtotal", "Desconto", "Total", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbVenda);
        if (tbVenda.getColumnModel().getColumnCount() > 0) {
            tbVenda.getColumnModel().getColumn(0).setMinWidth(80);
            tbVenda.getColumnModel().getColumn(0).setPreferredWidth(80);
            tbVenda.getColumnModel().getColumn(0).setMaxWidth(80);
            tbVenda.getColumnModel().getColumn(1).setPreferredWidth(200);
            tbVenda.getColumnModel().getColumn(5).setMinWidth(110);
            tbVenda.getColumnModel().getColumn(5).setPreferredWidth(110);
            tbVenda.getColumnModel().getColumn(5).setMaxWidth(110);
        }

        btnExcluirVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/delete.png"))); // NOI18N
        btnExcluirVenda.setText("Exlcluir");
        btnExcluirVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirVendaActionPerformed(evt);
            }
        });

        btnEditarVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/editar.png"))); // NOI18N
        btnEditarVenda.setText("Editar");
        btnEditarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarVendaActionPerformed(evt);
            }
        });

        vendaPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/pdf20.png"))); // NOI18N
        vendaPDF.setText("Relatório");
        vendaPDF.setToolTipText("");
        vendaPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendaPDFActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("TOTAL:");

        txtTotalConsulta.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtTotalConsulta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTotalConsulta.setEnabled(false);

        btnPedidosVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/pdf20.png"))); // NOI18N
        btnPedidosVenda.setText("Pedidos");
        btnPedidosVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPedidosVendaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelConsultaLayout = new javax.swing.GroupLayout(jPanelConsulta);
        jPanelConsulta.setLayout(jPanelConsultaLayout);
        jPanelConsultaLayout.setHorizontalGroup(
            jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
                    .addGroup(jPanelConsultaLayout.createSequentialGroup()
                        .addComponent(txtSearchVenda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearchVenda))
                    .addGroup(jPanelConsultaLayout.createSequentialGroup()
                        .addComponent(btnExcluirVenda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditarVenda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(vendaPDF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPedidosVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelConsultaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTotalConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelConsultaLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(53, 53, 53)))))
                .addContainerGap())
        );
        jPanelConsultaLayout.setVerticalGroup(
            jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSearchVenda)
                    .addGroup(jPanelConsultaLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtSearchVenda)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTotalConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnExcluirVenda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPedidosVenda)
                    .addGroup(jPanelConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnEditarVenda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(vendaPDF)))
                .addContainerGap())
        );

        jPanelVenda.addTab("Consulta", jPanelConsulta);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelVenda)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelVenda)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodClienteVendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodClienteVendaFocusLost
        // TODO add your handling code here:
        this.modelCliente = this.controllerCliente.getClienteController(Integer.parseInt(this.txtCodClienteVenda.getText()));
        this.cbNomeCliente.setSelectedItem(this.modelCliente.getName());
    }//GEN-LAST:event_txtCodClienteVendaFocusLost

    private void txtCodProdutoVendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodProdutoVendaFocusLost
        // TODO add your handling code here:
        this.modelProduto = this.controllerProduto.retornaProdutoController(Integer.parseInt(this.txtCodProdutoVenda.getText()));
        this.cbNomeProduto.setSelectedItem(this.modelProduto.getName());
    }//GEN-LAST:event_txtCodProdutoVendaFocusLost

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:
        int codVenda = 0, codProduto = 0;
        double desconto = 0;
       
        this.listaModelVendaProduto = new ArrayList<>();

        if (this.txtDescontoVenda.getText().equals("")) {
            desconto = 0;
        } else {
            desconto = Double.parseDouble(this.txtDescontoVenda.getText().replaceAll(",", "."));
        }
        if (!this.txtNumVenda.getText().equals("")) {
            this.modelVenda.setId(Integer.parseInt(this.txtNumVenda.getText()));
        }

        this.modelVenda.setIdClient(Integer.parseInt(this.txtCodClienteVenda.getText()));
        try {
            this.modelVenda.setDataVenda(data.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
        } catch (Exception ex) {
            Logger.getLogger(ViewVenda.class.getName()).log(Level.SEVERE, null, ex);
        }

        this.modelVenda.setValor(Double.parseDouble(this.txtTotalVenda.getText().replaceAll(",", ".")));
        this.modelVenda.setTotal(Double.parseDouble(this.txtTotalVenda.getText().replaceAll(",", ".")) + desconto);
        this.modelVenda.setVenDesconto(desconto);

        if (this.salvarAlterar.equals("salvar")) {
            codVenda = this.controllerVenda.salvarVendaController(this.modelVenda);

            if (codVenda > 0) {
                JOptionPane.showMessageDialog(this, "Venda realizada com sucesso!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao realizar a venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }

            int cont = this.tbVendaProduto.getRowCount();

            for (int i = 0; i < cont; i++) {
                codProduto = (int) this.tbVendaProduto.getValueAt(i, 0);
                this.modelVendaProduto = new ModelVendaProduto();
                this.modelProduto = new ModelProduto();

                this.modelVendaProduto.setIdProduto(codProduto);
                this.modelVendaProduto.setIdVenda(codVenda);
                this.modelVendaProduto.setVenProValor((double) this.tbVendaProduto.getValueAt(i, 3));
                this.modelVendaProduto.setVenProQtd(Integer.parseInt(this.tbVendaProduto.getValueAt(i, 2).toString()));

                this.modelProduto.setId(codProduto);
                this.modelProduto.setEstoque(this.controllerProduto.retornaProdutoController(codProduto).getEstoque() - Integer.parseInt(this.tbVendaProduto.getValueAt(i, 2).toString()));

                this.listaModelVendaProduto.add(this.modelVendaProduto);
                this.listaModelProduto.add(this.modelProduto);
            }

            if (this.controllerVendaProduto.salvarVendaProdutoController(this.listaModelVendaProduto)) {
//                JOptionPane.showMessageDialog(this, "Produtos adicionado na venda com sucesso!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
                this.carregarVendas();
                this.limparCampos();
                this.somaValorTotalConsulta();
                this.controllerProduto.alterarEstoqueProdutoController(this.listaModelProduto);
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao adicionar produtos na venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            int linha = this.tbVenda.getSelectedRow();
            codVenda = (int) this.tbVenda.getValueAt(linha, 0);
            this.listaModelProduto = new ArrayList<>();
            this.listaModelProdutoVendaProdutos = this.controllerProdutoVendaProdutos.getListaProdutoVendaProdutoController(codVenda);

            for (int i = 0; i < this.listaModelProdutoVendaProdutos.size(); i++) {
                this.modelProduto = new ModelProduto();
                this.modelProduto.setId(this.listaModelProdutoVendaProdutos.get(i).getModelProduto().getId());
                this.modelProduto.setEstoque(this.listaModelProdutoVendaProdutos.get(i).getModelProduto().getEstoque() + this.listaModelProdutoVendaProdutos.get(i).getModelVendaProduto().getVenProQtd());
                this.listaModelProduto.add(this.modelProduto);
            }
            if (this.controllerProduto.alterarEstoqueProdutoController(listaModelProduto)) {
                if (this.controllerVendaProduto.excluirVendaProdutoController(codVenda)) {
//                    JOptionPane.showMessageDialog(this, "Venda excluida com sucesso!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
                    this.carregarVendas();
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao excluir a venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir a venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }

            if (this.controllerVenda.atualizarVendaController(modelVenda)) {
                JOptionPane.showMessageDialog(this, "Venda alterada com sucesso!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao alterar a venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }

            int cont = this.tbVendaProduto.getRowCount();

            for (int i = 0; i < cont; i++) {
                codProduto = (int) this.tbVendaProduto.getValueAt(i, 0);
                this.modelVendaProduto = new ModelVendaProduto();
                this.modelProduto = new ModelProduto();

                this.modelVendaProduto.setIdProduto(codProduto);
                this.modelVendaProduto.setIdVenda(codVenda);
                this.modelVendaProduto.setVenProValor((double) this.tbVendaProduto.getValueAt(i, 3));
                this.modelVendaProduto.setVenProQtd(Integer.parseInt(this.tbVendaProduto.getValueAt(i, 2).toString()));

                this.modelProduto.setId(codProduto);
                this.modelProduto.setEstoque(this.controllerProduto.retornaProdutoController(codProduto).getEstoque() - Integer.parseInt(this.tbVendaProduto.getValueAt(i, 2).toString()));
                this.listaModelVendaProduto.add(this.modelVendaProduto);
                this.listaModelProduto.add(this.modelProduto);
            }

            if (this.controllerVendaProduto.salvarVendaProdutoController(listaModelVendaProduto)) {
//                JOptionPane.showMessageDialog(this, "Produtos da venda salvos com sucesso!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
                this.carregarVendas();
                this.limparCampos();
                this.somaValorTotalConsulta();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao salvar os produtodos da venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        }
        this.btnSalvar.setEnabled(false);
        this.btnAddProd.setEnabled(false);
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnExcluirVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirVendaActionPerformed
        // TODO add your handling code here:
        int linha = this.tbVenda.getSelectedRow();
        this.listaModelProduto = new ArrayList<>();

        try {
            int codVenda = (int) this.tbVenda.getValueAt(linha, 0);
            int result = JOptionPane.showConfirmDialog(this, "Tem certeza que dejesa excluir?", "ATENÇÃO", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (result == JOptionPane.YES_OPTION) {
                this.listaModelProdutoVendaProdutos = this.controllerProdutoVendaProdutos.getListaProdutoVendaProdutoController(codVenda);
                for (int i = 0; i < this.listaModelProdutoVendaProdutos.size(); i++) {
                    this.modelProduto = new ModelProduto();
                    this.modelProduto.setId(this.listaModelProdutoVendaProdutos.get(i).getModelProduto().getId());
                    this.modelProduto.setEstoque(this.listaModelProdutoVendaProdutos.get(i).getModelProduto().getEstoque() + this.listaModelProdutoVendaProdutos.get(i).getModelVendaProduto().getVenProQtd());
                    this.listaModelProduto.add(this.modelProduto);
                }
                if (this.controllerProduto.alterarEstoqueProdutoController(listaModelProduto)) {
                    this.controllerVendaProduto.excluirVendaProdutoController(codVenda);
                    if (this.controllerVenda.excluirVendaController(codVenda)) {
                        JOptionPane.showMessageDialog(this, "Venda excluida com sucesso!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
                        this.carregarVendas();
                        this.somaValorTotalConsulta();
                    } else {
                        JOptionPane.showMessageDialog(this, "Erro ao excluir a venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao excluir a venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Código inválido ou nenhum registro selecionado.", "ERRO", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnExcluirVendaActionPerformed

    private void btnAddProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProdActionPerformed
        // TODO add your handling code here:

        if (this.txtQtdProd.getText().equals("") || this.cbNomeCliente.getSelectedItem() == null || this.cbNomeProduto.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Necessário preencher os campos para a venda.", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        } else {
            this.modelProduto = this.controllerProduto.retornaProdutoController(Integer.parseInt(this.txtCodProdutoVenda.getText()));
            DefaultTableModel modelo = (DefaultTableModel) this.tbVendaProduto.getModel();
            int cont = 0;
            double qtd = 0;
            qtd = Double.parseDouble(this.txtQtdProd.getText());
            if (this.modelProduto.getEstoque() < qtd) {
                JOptionPane.showMessageDialog(this, "Quantidade da venda supeior ao estoque!", "ERRO", JOptionPane.ERROR_MESSAGE);
            } else {
                for (int i = 0; i < cont; i++) {
                    modelo.setNumRows(0);
                }

                modelo.addRow(new Object[]{
                    this.modelProduto.getId(),
                    this.modelProduto.getName(),
                    this.txtQtdProd.getText(),
                    this.modelProduto.getPrice(),
                    qtd * this.modelProduto.getPrice()
                });

                this.somarValorTotalProdutos();
            }
        }
    }//GEN-LAST:event_btnAddProdActionPerformed

    private void txtDescontoVendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescontoVendaFocusLost
        this.somarValorTotalProdutos();
    }//GEN-LAST:event_txtDescontoVendaFocusLost

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        // TODO add your handling code here:
        this.btnSalvar.setEnabled(true);
        this.btnAddProd.setEnabled(true);
        this.salvarAlterar = "salvar";
        this.limparCampos();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnEditarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarVendaActionPerformed
        // TODO add your handling code here:
        this.salvarAlterar = "alterar";
        int linha = this.tbVenda.getSelectedRow();
        DefaultTableModel modelo = (DefaultTableModel) this.tbVendaProduto.getModel();
        modelo.setRowCount(0);

        try {
            int codVenda = (int) this.tbVenda.getValueAt(linha, 0);
            this.listaModelProdutoVendaProdutos = this.controllerProdutoVendaProdutos.getListaProdutoVendaProdutoController(codVenda);
            for (int i = 0; i < this.listaModelProdutoVendaProdutos.size(); i++) {
                this.txtNumVenda.setText(String.valueOf(this.listaModelProdutoVendaProdutos.get(i).getModelVendaProduto().getIdVenda()));
                modelo.addRow(new Object[]{
                    this.listaModelProdutoVendaProdutos.get(i).getModelProduto().getId(),
                    this.listaModelProdutoVendaProdutos.get(i).getModelProduto().getName(),
                    this.listaModelProdutoVendaProdutos.get(i).getModelVendaProduto().getVenProQtd(),
                    this.listaModelProdutoVendaProdutos.get(i).getModelVendaProduto().getVenProValor(),
                    this.listaModelProdutoVendaProdutos.get(i).getModelVendaProduto().getVenProQtd() * this.listaModelProdutoVendaProdutos.get(i).getModelVendaProduto().getVenProValor()
                });
            }
            this.somaValorTotalDesconto();
            this.jPanelVenda.setSelectedIndex(0);
            this.btnSalvar.setEnabled(true);
            this.btnAddProd.setEnabled(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Código inválido ou nenhum registro selecionado.", "ERRO", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnEditarVendaActionPerformed

    private void txtDelProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDelProdActionPerformed
        // TODO add your handling code here:
        try {
            int linha = this.tbVendaProduto.getSelectedRow();
            DefaultTableModel modelo = (DefaultTableModel) this.tbVendaProduto.getModel();
            modelo.removeRow(linha);

            this.somarValorTotalProdutos();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Código inválido ou nenhum registro selecionado.", "ERRO", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_txtDelProdActionPerformed

    private void cbNomeProdutoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbNomeProdutoPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (this.cbNomeProduto.isVisible()) {
            this.preencherCodProdComboBox();
        }
    }//GEN-LAST:event_cbNomeProdutoPopupMenuWillBecomeInvisible

    private void cbNomeClientePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbNomeClientePopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (this.cbNomeCliente.isPopupVisible()) {
            this.preencherCodClienteComboBox();
        }
    }//GEN-LAST:event_cbNomeClientePopupMenuWillBecomeInvisible

    private void btnSearchVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchVendaActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel) this.tbVenda.getModel();
        final TableRowSorter<TableModel> classificador = new TableRowSorter<>(modelo);
        this.tbVenda.setRowSorter(classificador);
        String texto = this.txtSearchVenda.getText().toUpperCase();

        classificador.setRowFilter(RowFilter.regexFilter(texto, 1));
    }//GEN-LAST:event_btnSearchVendaActionPerformed

    private void txtQtdProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtdProdActionPerformed
        // TODO add your handling code here:
        this.btnAddProd.requestFocus();
    }//GEN-LAST:event_txtQtdProdActionPerformed

    private void txtDescontoVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescontoVendaActionPerformed
        // TODO add your handling code here:
        this.txtTotalVenda.requestFocus();
    }//GEN-LAST:event_txtDescontoVendaActionPerformed

    private void vendaPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendaPDFActionPerformed
        // TODO add your handling code here:
        this.controllerVenda.gerarRelatorioVenda();
    }//GEN-LAST:event_vendaPDFActionPerformed

    private void btnPedidosVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPedidosVendaActionPerformed
        // TODO add your handling code here:
        final Loading loading = new Loading();
        loading.setVisible(true);

        Thread thread = new Thread() {
            public void run() {
                try {
                    int linha = tbVenda.getSelectedRow();
                    int codPedido = (int) tbVenda.getValueAt(linha, 0);
                    controllerVenda.gerarRelatorioPedido(codPedido);
                    loading.dispose();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Código inválido ou nenhum registro selecionado.", "ERRO", JOptionPane.ERROR_MESSAGE);
                    loading.dispose();
                }
            }
        };
        thread.start();

    }//GEN-LAST:event_btnPedidosVendaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewVenda.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewVenda.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewVenda.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewVenda.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewVenda().setVisible(true);
            }
        });
    }

    private void preencherCodClienteComboBox() {
        try {
            this.modelCliente = this.controllerCliente.getClienteControllerString(this.cbNomeCliente.getSelectedItem().toString());
            this.txtCodClienteVenda.setText(String.valueOf(this.modelCliente.getId()));
        } catch (Exception e) {
        }

    }

    private void preencherCodProdComboBox() {
        try {
            this.modelProduto = this.controllerProduto.retornaProdutoControllerString(this.cbNomeProduto.getSelectedItem().toString());
            this.txtCodProdutoVenda.setText(String.valueOf(this.modelProduto.getId()));
        } catch (Exception e) {
        }

    }

    private void listarClientes() {
        this.listaModelCliente = this.controllerCliente.getListaClienteController();
        this.cbNomeCliente.removeAllItems();

        for (int i = 0; i < this.listaModelCliente.size(); i++) {
            this.cbNomeCliente.addItem(this.listaModelCliente.get(i).getName());
        }
    }

    private void listarProdutos() {
        this.listaModelProduto = this.controllerProduto.retornaListaProdutoController();
        this.cbNomeProduto.removeAllItems();

        for (int i = 0; i < this.listaModelProduto.size(); i++) {
            this.cbNomeProduto.addItem(this.listaModelProduto.get(i).getName());
        }
    }

    private void aplicarDesconto() {
        try {
            this.txtTotalVenda.setText(String.valueOf(Double.parseDouble(this.txtTotalVenda.getText().replaceAll(",", ".")) - Double.parseDouble(this.txtDescontoVenda.getText().replaceAll(",", "."))));
        } catch (NumberFormatException e) {
        }
    }

    private void somarValorTotalProdutos() {
        double soma = 0, valor;
        int cont = this.tbVendaProduto.getRowCount();

        for (int i = 0; i < cont; i++) {
            valor = (double) this.tbVendaProduto.getValueAt(i, 4);
            soma = soma + valor;
        }
        this.txtTotalVenda.setText(String.valueOf(soma).format("%.2f", soma));

        this.aplicarDesconto();
        this.somaValorTotalConsulta();
    }

    private void somaValorTotalDesconto() {
        double total, desconto;
        int linha = this.tbVenda.getSelectedRow();
        total = (double) this.tbVenda.getValueAt(linha, 4);
        desconto = (double) this.tbVenda.getValueAt(linha, 3);

        this.txtTotalVenda.setText(String.valueOf(total).format("%.2f", total));
        this.txtDescontoVenda.setText(String.valueOf(desconto).format("%.2f", desconto));

    }

    private void somaValorTotalConsulta() {
        double soma = 0, valor;
        int cont = this.tbVenda.getRowCount();

        for (int i = 0; i < cont; i++) {
            valor = (double) this.tbVenda.getValueAt(i, 4);
            soma = soma + valor;
        }
        this.txtTotalConsulta.setText(String.valueOf(soma).format("%.2f", soma));

    }

    private void carregarVendas() {
        DefaultTableModel modelo = (DefaultTableModel) this.tbVenda.getModel();
        this.listaModelVendasCliente = this.controllerVendasCliente.getListaVendasClienteController();
        int cont = this.listaModelVendasCliente.size();
       
        modelo.setNumRows(0);

        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                this.listaModelVendasCliente.get(i).getModelVendas().getId(),
                this.listaModelVendasCliente.get(i).getModelCliente().getName(),
                this.listaModelVendasCliente.get(i).getModelVendas().getTotal(),
                this.listaModelVendasCliente.get(i).getModelVendas().getVenDesconto(),
                this.listaModelVendasCliente.get(i).getModelVendas().getValor(),
                this.listaModelVendasCliente.get(i).getModelVendas().getDataVenda(),
            });
        }
    }

    private void limparCampos() {
        this.txtQtdProd.setText("");
        this.txtDescontoVenda.setText("");
        this.txtTotalVenda.setText("");
        DefaultTableModel modelo = (DefaultTableModel) this.tbVendaProduto.getModel();
        modelo.setNumRows(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddProd;
    private javax.swing.JButton btnEditarVenda;
    private javax.swing.JButton btnExcluirVenda;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnPedidosVenda;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnSearchVenda;
    private componentes.UJComboBox cbNomeCliente;
    private componentes.UJComboBox cbNomeProduto;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanelCadastro;
    private javax.swing.JPanel jPanelConsulta;
    private javax.swing.JTabbedPane jPanelVenda;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbVenda;
    private javax.swing.JTable tbVendaProduto;
    private javax.swing.JTextField txtCodClienteVenda;
    private javax.swing.JTextField txtCodProdutoVenda;
    private javax.swing.JButton txtDelProd;
    private javax.swing.JTextField txtDescontoVenda;
    private javax.swing.JTextField txtNumVenda;
    private javax.swing.JTextField txtQtdProd;
    private javax.swing.JTextField txtSearchVenda;
    private javax.swing.JTextField txtTotalConsulta;
    private javax.swing.JFormattedTextField txtTotalVenda;
    private javax.swing.JButton vendaPDF;
    // End of variables declaration//GEN-END:variables
}
